apiVersion: v1
kind: PersistentVolume
metadata:
  name: asiayo-pv
  namespace: asiayo
spec:
  capacity:
    storage: 10Gi
  accessModes:
    - ReadWriteOnce
  storageClassName: gp2
  awsElasticBlockStore:
    volumeID: vol-xxx
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: asiayo-pvc
  namespace: asiayo
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: gp2
  resources:
    requests:
      storage: 10Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: asiayo-deploy
  namespace: asiayo
spec:
  replicas: 3
  selector:
    matchLabels:
      app: asiayo
  template:
    metadata:
      labels:
        app: asiayo
    spec:
      containers:
      - name: asiayo-app
        image: asiayo.com/app:latest
        ports:
        - containerPort: 8080
        env:
        - name: DB_WRITER_HOST
          value: mysql-writer
        - name: DB_READER_HOST
          value: mysql-reader
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secrets
              key: MYSQL_PASSWORD
        volumeMounts:
        - name: app-storage
          mountPath: /data
      volumes:
      - name: app-storage
        persistentVolumeClaim:
          claimName: asiayo-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: asiayo-svc
  namespace: asiayo
spec:
  selector:
    app: asiayo
  ports:
    - port: 80
      targetPort: 8080
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: asiayo-ing
  namespace: asiayo
  annotations:
    kubernetes.io/ingress.class: "nginx"
spec:
  rules:
  - host: asiayo.com
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: asiayo-svc
            port:
              number: 80
